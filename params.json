{"name":"SciTECO","tagline":"Advanced TECO dialect and interactive screen editor based on Scintilla","body":"Overview\r\n========\r\n\r\nSciTECO is an interactive TECO dialect, similar to [Video TECO](http://www.copters.com/teco.html).\r\nIt also adds features from classic TECO-11, as well as unique new ideas.\r\n\r\nThe basic approach to text editing is both radically different and surprisingly similar to popular\r\neditors like Vi or EMacs. Instead of using mostly keyboard commands to modify text in a visual\r\nmanner, in SciTECO you edit a program (called macro) using very few keyboard commands (called\r\nimmediate editing commands). This program edits text for the user and is executed immediately,\r\nas far as possible. For instance, moving the cursor to the right can be done immediatly via the\r\n\"C\" command which is a part of the editor language. The language is the editor so to speak.\r\nWhen you delete a character from the end of the command line macro (called rubout), the\r\nside-effects of that character which may be a command or part of a command, are undone.\r\n\r\nSciTECO uses the [Scintilla](http://www.scintilla.org/) editor component and supports\r\nGTK+ as well as NCurses frontends (using [Scinterm](http://foicica.com/scinterm/)).\r\nThe NCurses frontend also works with [PDCurses/XCurses](http://pdcurses.sourceforge.net/)\r\nand its [win32a port](http://www.projectpluto.com/win32a.htm).\r\nBoth Linux and Windows (MinGW 32/64) are supported.\r\n\r\nFeatures\r\n========\r\n\r\nSome of these features are not yet present but expected to be supported in the near future.\r\n\r\n* All of the basic Video TECO commands supported\r\n* Operator precedence in arithmetic expressions and an argument stack that may be modified\r\n  by the user (commands may have more than two arguments)\r\n* Extended Q-Register namespace (arbitrary strings): can be used to build libraries and\r\n  can be abused as a data structure\r\n* Make use of your keyboard's function keys by assigning them to strings inserted into\r\n  the command stream\r\n* Many TECO-11 features, like that most commands have a colon-modified form, string-building\r\n  characters, exotic match characters\r\n* Interactivity: supports filename completion via immediate editing commands (e.g. `<TAB>` in\r\n  commands accepting filenames); immediate searching (similar to search-as-you-type);\r\n  context-sensitive immediate editing commands\r\n* Command rubout: SciTECO can even undo file writes (`EW` command)\r\n* Munging: Macros may be munged, that is executed in batch mode. By default, a profile\r\n  is munged.\r\n* Syntax highlighting, styles, line numbers, etc. thanks to Scintilla\r\n\r\nInstallation\r\n============\r\n\r\nSciTECO has the following build and runtime dependencies:\r\n* Autotools, GNU C, C++ and [Gob2](http://www.jirka.org/gob.html)\r\n* Groff (only when formatting HTML manuals)\r\n* [Glib](http://developer.gnome.org/glib/), as a cross-platform runtime library\r\n* [Scintilla](http://www.scintilla.org/), and possibly [Scinterm](http://foicica.com/scinterm/)\r\n  (v1.1 or later)\r\n* [GTK+ 2](http://www.gtk.org/), [NCurses](http://www.gnu.org/software/ncurses/),\r\n  [PDCurses/XCurses](http://pdcurses.sourceforge.net/) or\r\n  [PDCurses/Win32a](http://www.projectpluto.com/win32a.htm).\r\n* Other curses implementations might work as well but are untested.\r\n\r\n1. Build Scintilla as described in its README. If you want to build the ncurses version,\r\n   install Scinterm from a subdirectory of Scintilla called `scinterm`\r\n   (also have a look at SciTECO's `--with-scinterm` configure option).\r\n   * For TECO-style control code echoing, apply `patches/scintilla-teco-control-codes.patch`\r\n     from the SciTECO archive/repository. This will hopefully be simplified in the future.\r\n2. Untar/unzip/check-out SciTECO into a subdirectory of Scintilla.\r\n   Alternatively, have a look at SciTECO's `--with-scintilla` configure option.\r\n3. Build like any other Autoconf-based project. `autoreconf` (only necessary if building from\r\n   a working copy), followed by `./configure`, followed by `make`.\r\n   The interface may be chosen with `--with-interface` (ncurses is the default).\r\n3. Install with `make install`.\r\n4. You are recommended to use the included `teco.ini` as a starting point for your profile,\r\n   so copy it to `~/.teco_ini`.\r\n\r\nAdditional Documentation\r\n========================\r\n\r\n* There is a manpage [__sciteco__(1)](http://rhaberkorn.github.com/sciteco/manuals/sciteco.1.html)\r\n  describing program invocation and SciTECO's batch mode processing.\r\n* There is a manpage [__sciteco__(7)](http://rhaberkorn.github.com/sciteco/manuals/sciteco.7.html)\r\n  describing SciTECO as a language.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}