Known Bugs:
 * ??? Dot is not always restored properly (e.g. after closing file)
   need test case!!!
 * Null-byte in strings not always handled transparently
 * saving another user's file will only preserve the user when run as root
   (WON'T FIX!?)
 * Scintilla/Scinterm: sometimes <TAB> indents too much (see e.g. state declarations)

Features:
 * protect ED hook executions (process like "(<x>M0$)")
 * refactor search commands (create proper base class)
 * Progress indication in commandline cursor
 * catch OOM errors (can happen easily due to infinite loops)
 * undo-tokens per char limit (additional infinite loop safety)
 * Function-key support, configurable
   * generic function-key substitution, or
   * function-key encoding (e.g. Page-down -> ^FPD), or
   * function-key to ASCII/UTF mapping (as command executes macro of the same name)
 * Command to free Q-Register (remove from table)
 * refactor match-char state machine using MicroStateMachine class
 * autocompletion of long Q-Reg names
 * Q-Register aliasing/linking
 * EC command
   * perhaps support Bash completions
 * TECO syntax highlighting
 * multiline commandline
   * perhaps use Scintilla view as mini buffer
 * improve GTK interface
 * modifier for toggling string building processing
 * simplify parser (static jump tables are unnecessary!)
 * ??? optional modified-detection based on hash sums ???
 * backup files, or even better Journal files:
   could write a Macro file for each modified file containing
   only basic commands (no loops etc.). it is removed when the file is
   saved. in case of an abnormal program termination the
   journal file can be replayed.
 * search and other commands can be significantly optimized:
   in batch mode, or in loops/macros there is no need to rematch every character!
   -> immediate vs. non-immediate command execution
 * batch mode can be optimized by preventing unnecessary allocations/deallocations
   for UNDO token creation. Check for undo.enabled in constructors like
   undo.push_msg|var() where the undo token destruction does not have any
   significant side effects.
 * use "friend" functions for C-linkage callbacks that must access a class'
   member instead of making that member public

Documentation:
 * Code docs (Doxygen)
 * Language reference?
 * Command reference
